[{"/Users/davidbrister/Desktop/Dev/amplifyapp/src/index.js":"1","/Users/davidbrister/Desktop/Dev/amplifyapp/src/App.js":"2","/Users/davidbrister/Desktop/Dev/amplifyapp/src/reportWebVitals.js":"3","/Users/davidbrister/Desktop/Dev/amplifyapp/src/aws-exports.js":"4","/Users/davidbrister/Desktop/Dev/amplifyapp/src/graphql/queries.js":"5","/Users/davidbrister/Desktop/Dev/amplifyapp/src/graphql/mutations.js":"6"},{"size":599,"mtime":1607170959047,"results":"7","hashOfConfig":"8"},{"size":2816,"mtime":1607346853894,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607146037626,"results":"10","hashOfConfig":"8"},{"size":877,"mtime":1607346607045,"results":"11","hashOfConfig":"8"},{"size":622,"mtime":1607346604692,"results":"12","hashOfConfig":"8"},{"size":952,"mtime":1607346604771,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uoppx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/davidbrister/Desktop/Dev/amplifyapp/src/index.js",[],["29","30"],"/Users/davidbrister/Desktop/Dev/amplifyapp/src/App.js",["31"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, Storage } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listCamps } from './graphql/queries';\nimport { createCamp as createCampMutation, deleteCamp as deleteCampMutation } from './graphql/mutations';\n\nconst initialFormState = { name: '', description: '' }\nfunction App() {\n  const [camps, setCamps] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n\n  useEffect(() => {\n    fetchCamps();\n  }, []);\n\n  async function onChange(e) {\n    if (!e.target.files[0]) return\n    const file = e.target.files[0];\n    setFormData({ ...formData, image: file.name });\n    await Storage.put(file.name, file);\n    fetchCamps();\n  }\n\n  async function fetchCamps () {\n    const apiData = await API.graphql({ query: listCamps });\n    const campsFromAPI = apiData.data.listCamps.items;\n    await Promise.all(campsFromAPI.map(async note => {\n      if (note.image) {\n        const image = await Storage.get(note.image);\n        note.image = image;\n      }\n      return note;\n    }))\n    setCamps(apiData.data.listCamps.items);\n  }\n\n  async function createCamp() {\n    if (!formData.name || !formData.description) return;\n    await API.graphql({ query: createCampMutation, variables: { input: formData } });\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n    setCamps([...camps, formData]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteCamp({ id }) {\n    const newCampsArray = camps.filter(camp => camp.id !== id);\n    setCamps(newCampsArray);\n    await API.graphql({query: deleteCampMutation, variables: { input: id } });\n  }\n  return (\n    <div className=\"App\">\n      <h1>My Camps App</h1>\n      <input\n        onChange={e => setFormData({ ...formData, 'name': e.target.value})}\n        placeholder=\"Camp name\"\n        value={formData.name}\n      />\n      <input\n        onChange={e => setFormData({ ...formData, 'description': e.target.value})}\n        placeholder=\"Camp description\"\n        value={formData.description}\n      />\n      <input\n        type=\"file\"\n        onChange={onChange}\n      />\n      <button onClick={createCamp}>Create Camp</button>\n      <div style={{marginBottom: 30}}>\n        {\n          camps.map(camp => (\n            <div key={camp.id || camp.name}>\n              <h2>{camp.name}</h2>\n              <p>{camp.description}</p>\n              <button onClick={() => deleteCamp(camp)}>Delete camp</button>\n              {\n                camp.image && <img src={camp.image} style={{width: 400}} />\n              }\n            </div>\n          ))\n        }\n      </div>\n      <AmplifySignOut />\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n","/Users/davidbrister/Desktop/Dev/amplifyapp/src/reportWebVitals.js",[],"/Users/davidbrister/Desktop/Dev/amplifyapp/src/aws-exports.js",[],"/Users/davidbrister/Desktop/Dev/amplifyapp/src/graphql/queries.js",[],"/Users/davidbrister/Desktop/Dev/amplifyapp/src/graphql/mutations.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":80,"column":31,"nodeType":"40","endLine":80,"endColumn":76},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["43"],["44"],"no-global-assign","no-unsafe-negation"]